jobs:
  process-queue:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Git user identity
      - name: Set up Git user
        run: |
          git config --global user.name "Ysoll"
          git config --global user.email "voda.cristian94@gmail.com"

      # Step 3: Configure Git to use GITHUB_TOKEN for authentication
      - name: Set up Git authentication
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      # Step 4: Read queue and get the first RC branch (FIFO)
      - name: Read queue and get the first RC branch
        id: get_queue
        run: |
          if [ ! -s rc_queue.json ]; then
            echo "No branches in the queue"
            exit 0
          fi
          queue_branch=$(jq -r '.queue[0]' rc_queue.json)
          echo "Picked branch: $queue_branch"
          echo "::set-output name=branch::$queue_branch"

      # Step 5: Sync RC branch with master
      - name: Sync RC branch with master
        id: merge_master
        run: |
          branch="${{ steps.get_queue.outputs.branch }}"
          
      # Fetch all remote branches
          git fetch origin

       # Check if the branch exists
          if git show-ref --verify --quiet refs/heads/$branch; then
            echo "Branch $branch exists, checking it out."
            git checkout $branch
          else
            echo "Branch $branch does not exist, creating it."
            git checkout -b $branch
            git push origin $branch
          fi
          
          # Merge master into the branch
          git fetch origin master
          set +e  # Disable exit on error
          git merge origin/master --no-edit
          if [ $? -ne 0 ]; then
            echo "Merge conflict detected, aborting."
            echo "::set-output name=conflict::true"
           exit 0
          fi
          set -e  # Re-enable exit on error
          echo "::set-output name=conflict::false"

      # Continue with the rest of your workflow...
